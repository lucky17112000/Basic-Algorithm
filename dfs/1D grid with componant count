#include <bits/stdc++.h>

using namespace std;
const int N = 1e5 + 7;
vector<int> arr[N];
vector<bool> visited(N, false);
void dfs(int src)
{
    cout << src << " ";
    visited[src] = true;
    for (auto u : arr[src])
    {
        if (visited[u] == false)
        {
            dfs(u);
        }
    }
}
static void go_on()
{

    int n, e;
    cin >> n >> e;
    while (e--)
    {
        int a, b;
        cin >> a >> b;
        arr[a].push_back(b);
        arr[b].push_back(a);
    }
    // dfs(0);
    // dfs with all componant
    int c = 0;
    for (int i = 0; i < n; ++i)
    {
        if (visited[i] == false)
        {
            dfs(i);
            ++c;
        }
    }
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    long long tt = 1;
    // cin >> tt;
    while (tt--)
    {
        go_on();
    }

    return 0;
}
