// Bismillah

/*When I write code, my only request to Creator(Allah) is that he opens
my eyes of knowledge. And may he be with me... And make everything
easy for me..Amin...............*/
// الله أكبر
// 真主至大

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define endl '\n'
#define ll long long int
#define inf INT_MAX
#define pii pair<int, int>
#define negInf INT_MIN
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a * b) / gcd(a, b))
#define __pow(a, b) exp(b *log(a))
// void hey_output()
// {
// #ifndef ONLINE_JUDGE
//     freopen("input.txt", "r", stdin);
//     freopen("output.txt", "w", stdout);
// #endif
// }

using namespace __gnu_pbds;
using namespace std;
template <typename T>
using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int N = 1e5 + 7;
ll bit_on_or_off_chk(ll x, ll k)
{
    return ((x >> k) & 1);
}
ll do_kth_bit_on(ll x, ll k)
{
    return (x | (1 << k));
}

ll do_kth_bit_off(ll x, ll k)
{
    return (x & (~(1 << k)));
}
void makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah()
{

    /*if (bit_on_or_off_chk(44, 0))
        cout << "set or on" << endl;
    else
        cout << "unset or off" << endl;*/
    // binrary value print right to left start
    //  for (int i = 0; i <= 7; ++i)
    //  {
    //      if(bit_on_or_off_chk(44 , i))cout << 1;
    //      else cout << 0;
    //  }
    // binrary value print right to left end

    // how many set bit start

    //  ll cnt = 0;
    //  for (int i = 0; i <= 7; ++i)
    // {
    //     if(bit_on_or_off_chk(44 , i))++cnt;

    // }
    // cout << cnt << endl;
    // how many set bit end

    // cout << do_kth_bit_on(44 , 4);
    // cout << do_kth_bit_off(44 , 3);
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // hey_output();

    int t = 1;
    // cin >> t;
    while (t--)
    {
        makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah();
    }

    return 0;
}
// Alhamdulillah
